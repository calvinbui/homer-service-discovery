---

name: release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write
      issues: write

    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ⚙️ Get Go version
        run: echo go_version="$(cat Dockerfile | grep 'FROM golang:' | grep -o -P '(?<=golang:).*(?=-alpine)')" >> $GITHUB_ENV

      - name: 🥽 Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "${{ env.go_version }}"

      - name: 🌐 Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: 🛠️ Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🧯 Enable Docker experimental features
        run: |
          echo $'{\n  "experimental": true\n}' | sudo tee /etc/docker/daemon.json
          mkdir -p ~/.docker
          echo $'{\n  "experimental": "enabled"\n}' | sudo tee ~/.docker/config.json
          sudo service docker restart
          docker version -f '{{.Client.Experimental}}'
          docker version -f '{{.Server.Experimental}}'
          docker buildx version

      - name: 🚪 Docker Login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔑 Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: 🛒 Release
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
