---

name: ci

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types:
      - created

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - run: echo go_version="$(cat Dockerfile | grep 'FROM golang:' | grep -o -P '(?<=golang:).*(?=-alpine)')" >> $GITHUB_ENV

      - uses: actions/setup-go@v2
        with:
          go-version: "${{ env.go_version }}"

      - run: go build -v ./...

      - run: go test -v ./...

      - uses: golangci/golangci-lint-action@v2
        with:
          version: latest

  release:
    runs-on: ubuntu-latest
    need:
      - test
    if: github.event_name == 'release' && github.event.action == 'created'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - run: echo go_version="$(cat Dockerfile | grep 'FROM golang:' | grep -o -P '(?<=golang:).*(?=-alpine)')" >> $GITHUB_ENV

      - uses: actions/setup-go@v2
        with:
          go-version: "${{ env.go_version }}"

      - uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
