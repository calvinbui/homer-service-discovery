---

name: test

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v3

      - name: ⚙️ Get Go version
        run: echo go_version="$(cat Dockerfile | grep 'FROM golang:' | grep -o -P '(?<=golang:).*(?=-alpine)')" >> $GITHUB_ENV

      - name: 🥽 Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "${{ env.go_version }}"
          cache: true

      - name: 🧱 go fmt
        run: test -z $(go fmt ./...)

      - name: 🦺 Go Build
        run: go build -v ./...

      - name: ⛑️ Go Test
        run: go test -v ./...

  golangci:
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v3

      - name: ⚙️ Get Go version
        run: echo go_version="$(cat Dockerfile | grep 'FROM golang:' | grep -o -P '(?<=golang:).*(?=-alpine)')" >> $GITHUB_ENV

      - name: 🥽 Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "${{ env.go_version }}"
          cache: true

      - name: 📢 golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          skip-go-installation: true

  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v3

      - name: ⚙️ Get Go version
        run: echo go_version="$(cat Dockerfile | grep 'FROM golang:' | grep -o -P '(?<=golang:).*(?=-alpine)')" >> $GITHUB_ENV

      - name: 🥽 Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "${{ env.go_version }}"

      - name: 📜 Check
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📐 Build Only
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: build --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
